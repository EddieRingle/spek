allprojects {

    dependencies {
        ext {
            /* Library dependencies */
            libKotlinStd = "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
            libJunit = "junit:junit:$junitVersion"
        }
    }

    repositories {
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }

    /* Project version */
    if (hasProperty("teamcity") && !kotlinVersion.equals("0.1-SNAPSHOT")) {
        version = teamcity["build.number"]
    } else {
        version = "0.1-SNAPSHOT"
    }

    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: "kotlin"

    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}

buildscript {
    allprojects {
        ext {
            /* Plugin dependencies */
            plugKotlinGradle = "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        }
    }

    repositories {
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }

    dependencies {
        classpath plugKotlinGradle
    }
}

println project.kotlinVersion

subprojects {
    configurations {
        /* used when packing 'spek.jar' for download */
        include_unpacked_jars
    }

    dependencies {
        compile libKotlinStd
        compile libJunit

        include_unpacked_jars libJunit
    }

    test {
        /* Set heap size for the test JVM(s) */
        minHeapSize = "128m"
        maxHeapSize = "512m"

        /* set JVM arguments for the test JVM(s) */
        jvmArgs '-XX:MaxPermSize=256m'
    }

    tasks.withType(Jar) { task ->
        task.manifest.attributes([
                "Implementation-Title": "Spek",
                "Implementation-Version": rootProject.version,
                "Implementation-Kotlin-Version": kotlinVersion,
                "Build-Time": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
